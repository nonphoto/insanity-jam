<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite16</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drone = false

move_speed = 2
held = noone
moving = false

image_speed = .1

xx = x
yy = y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Move object
if (xx &lt; x) {
    x = max(x - move_speed, xx)
}
if (xx &gt; x) {
    x = min(x + move_speed, xx)
}
if (yy &lt; y) {
    y = max(y - move_speed, yy)
}
if (yy &gt; y) {
    y = min(y + move_speed, yy)
}

if (held != noone) {
    held.x = x
    held.y = y
}

// Check if completed movement
if (y == yy &amp;&amp; x == xx) {
    moving = false
}

// Check keyboard
if (keyboard_check(vk_left) &amp;&amp; !moving &amp;&amp; place_free(x - tile_size, y)) {
    moving = true
    xx -= tile_size
}
if (keyboard_check(vk_right) &amp;&amp; !moving &amp;&amp; place_free(x + tile_size, y)) {
    moving = true
    xx += tile_size
}
if (keyboard_check(vk_up) &amp;&amp; !moving &amp;&amp; place_free(x, y - tile_size)) {
    moving = true
    yy -= tile_size
}
if (keyboard_check(vk_down) &amp;&amp; !moving &amp;&amp; place_free(x, y + tile_size)) {
    moving = true
    yy += tile_size
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Code">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Drone">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(vk_enter) &amp;&amp; (held != noone)){
    var logic_length = array_length_1d(other.logic)
    var action_length = array_length_1d(other.action)
    if(held.type == "logic"){
        if(other.logic[logic_length-1] != noone){
            other.logic[logic_length] = held
            other.action[action_length] = noone
        }
        if(other.logic[logic_length-1] == noone){
            other.logic[logic_length-1] = held
        }
    }
    if(held.type == "action"){
        if(other.action[action_length-1] != noone){
            other.action[action_length] = held
            other.logic[logic_length] = noone
        }
        if(other.action[action_length-1] == noone){
            other.action[action_length-1] = held
        }
    }
    held = noone
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (held == noone) {
    var obj = instance_place(x, y, Code)
    if (obj != noone) {
        held = obj
        held.x = 0
        held.y = 0
        held.visible = false
    }
}
else {
    var obj = instance_place(x, y, Drone)
    if (obj == noone) {
        held.x = x
        held.y = y
        held.visible = true
        held = noone
    }
}
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
