<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_control</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar player1;
globalvar drone1;
globalvar control;

player1 = 0
drone1 = 0
control = id

//Initialize element properties...
gui1_x = 0
gui1_y = view_hview - tile_size * 4
gui1_w = view_wview / 2
gui1_h = tile_size * 4

gui2_x = view_wview / 2
gui2_y = view_hview - tile_size * 4
gui2_w = view_wview / 2
gui2_h = tile_size * 4

p1_is_editing = false
p1_drone = noone
p1_editing_x = 0
p1_editing_y = 0
p1_held_x = gui1_x + gui1_w / 2 - tile_size / 2
p1_held_y = gui1_y


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xx;
var yy;
if (p1_is_editing) {
    var l = ds_list_size(p1_drone.logic)
    xx = gui1_x + (gui1_w / 2) - (l * tile_size) / 2
    yy = gui1_y + tile_size
}
else {
    if (p1_drone &gt; 0) {
        var l = ds_list_size(p1_drone.logic)
        xx = gui1_x - (l + 1) * tile_size / 2
        yy = gui1_y + tile_size
    }
    xx = gui1_x - tile_size * 2
    yy = gui1_y + tile_size
}
p1_editing_x += (xx - p1_editing_x) / 4
p1_editing_y += (yy - p1_editing_y) / 4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var empty_sprite = asset_get_index("spr_empty")

draw_set_colour(c_black)
draw_rectangle(gui1_x, gui1_y, gui1_x + gui1_w, gui1_y + gui1_h, false)


x = p1_held_x
y = p1_held_y
if (player1.held &gt; 0) {
    if (player1.held.type == "logic") {
        draw_sprite(player1.held.sprite_index, 0, x, y)
    }
    if (player1.held.type == "action") {
        draw_sprite(player1.held.sprite_index, 0, x, y + 3 * tile_size)
    }
}

x = p1_editing_x
y = p1_editing_y

if (p1_drone &gt; 0) {
    i = 0
    l = ds_list_size(p1_drone.logic)        
    while (i &lt; l) {
        if (ds_list_find_value(p1_drone.logic, i) &gt; 0) {
            draw_sprite(ds_list_find_value(p1_drone.logic, i).sprite_index, 0, x, y)   
        }
        else {
            draw_sprite(empty_sprite, 0, x, y)
        }
        x += tile_size
        i += 1
    }
}

x = p1_editing_x
y += tile_size

if (p1_drone &gt; 0) {
    i = 0
    l = ds_list_size(p1_drone.action)
    while (i &lt; l) {
        if (ds_list_find_value(p1_drone.action, i) &gt; 0) {
            draw_sprite(ds_list_find_value(p1_drone.action, i).sprite_index, 0, x, y)   
        }
        else {
            draw_sprite(empty_sprite, 0, x, y)
        }
        x += tile_size
        i += 1
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
