<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_control</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1410065408</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar player1;
globalvar drone1;

player1 = 0
drone1 = 0

menu_height = tile_size * 4
display_set_gui_maximise(2, 2, 0, 0)

gui_translate_x = ds_stack_create()
gui_translate_y = ds_stack_create()

ds_stack_push(gui_translate_x, 0)
ds_stack_push(gui_translate_y, 0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = 0
y = 0

var logic = drone1.logic
var action = drone1.action
var empty_sprite = asset_get_index("spr_empty")
var spacing = 4
var size = 16

x = 0
y = view_hview - menu_height
draw_set_colour(c_black)
draw_rectangle(x, y, x + view_wview, y + menu_height, false)
draw_set_colour(c_white)

x = spacing
y += spacing
for (i = 0; i &lt; array_length_1d(logic); i++) {
    if (logic[i] != noone) {
       draw_sprite(logic[i].sprite_index, 0, x, y)
    }
    else {
      draw_sprite(empty_sprite, 0, x, y)
    }
    x += size + spacing
}
x = spacing
y += size + spacing
for (i = 0; i &lt; array_length_1d(action); i++) {
    if (action[i] != noone) {
       draw_sprite(action[i].sprite_index, 0, x, y)
    }
    else {
       draw_sprite(empty_sprite, 0, x, y)
    }
    x += size + spacing
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
